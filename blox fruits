local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/GreenDeno/Venyx-UI-Library/main/source.lua"))()
local venyx = library.new("Wry Hub ([UPDATE 14] Blox Fruits)", 5013109572)

-- themes
local themes = {
    Background = Color3.fromRGB(24, 24, 24),
    Glow = Color3.fromRGB(0, 0, 0),
    Accent = Color3.fromRGB(10, 10, 10),
    LightContrast = Color3.fromRGB(20, 20, 20),
    DarkContrast = Color3.fromRGB(14, 14, 14),  
    TextColor = Color3.fromRGB(255, 255, 255)
    }

    -- first page
local page = venyx:addPage("Character", 5012544693)
local e = venyx:addPage("Esp", 5012544693)
local p = venyx:addPage("Auto Farm", 5012544693)
local q = venyx:addPage("Teleport", 5012544693)
local h = venyx:addPage("Credits", 5012544693)
local section1 = page:addSection("Character")
local b = p:addSection("Auto Farm (old world)")
local mano = q:addSection("Teleport Player")
local m = q:addSection("Teleports")
local n = e:addSection("item esp (old world)")
local g = h:addSection("Credits")


mano:addTextbox("Teleport Player", "Player name here", function(t)
    local p1 = game.Players.LocalPlayer.Character.HumanoidRootPart
    local p2 = t
    local pos = p1.CFrame
    
    p1.CFrame = game.Players[p2].Character.HumanoidRootPart.CFrame
end)

n:addButton("Fruits Esp", function()
    venyx:Notify("Wry Hub", "Checking Fruits")
    
    for i,v in pairs(game.Workspace:GetDescendants()) do -- grabs everything from workspace
        if v.ClassName == 'TouchTransmitter' and v.Parent.Name == 'Handle' then -- checks if it has a handle and if its a touchtransmitter
            local BillboardGui = Instance.new('BillboardGui') -- Makes Billboardgui
            local TextLabel = Instance.new('TextLabel') -- makes text label
            
            BillboardGui.Parent = v.Parent -- what the billboardgui goes into
            BillboardGui.AlwaysOnTop = true -- if its on top or not
            BillboardGui.Size = UDim2.new(0, 50, 0, 50) -- size of it
            BillboardGui.StudsOffset = Vector3.new(0,2,0)
            
            TextLabel.Parent = BillboardGui -- putting textlabel into billboardgui
            TextLabel.BackgroundColor3 = Color3.new(1,1,1) -- color
            TextLabel.BackgroundTransparency = 1 -- transparency
            TextLabel.Size = UDim2.new(1, 0, 1, 0) -- size
            TextLabel.Text = v.Parent.Parent.Name -- what the label says
            TextLabel.TextColor3 = Color3.new(1, 0, 0) -- color
            TextLabel.TextScaled = true -- if the text is scaled or not
        end
        end
end)
n:addButton("Chest Esp", function()
    for i,v in pairs(game.Workspace:GetDescendants()) do -- grabs everything from workspace
        if v.ClassName == 'TouchTransmitter' and v.Parent.Name == 'Chest2' then -- checks if it has a handle and if its a touchtransmitter
            local BillboardGui = Instance.new('BillboardGui') -- Makes Billboardgui
            local TextLabel = Instance.new('TextLabel') -- makes text label
            
            BillboardGui.Parent = v.Parent -- what the billboardgui goes into
            BillboardGui.AlwaysOnTop = true -- if its on top or not
            BillboardGui.Size = UDim2.new(0, 50, 0, 50) -- size of it
            BillboardGui.StudsOffset = Vector3.new(0,2,0)
            
            TextLabel.Parent = BillboardGui -- putting textlabel into billboardgui
            TextLabel.BackgroundColor3 = Color3.new(1,1,1) -- color
            TextLabel.BackgroundTransparency = 1 -- transparency
            TextLabel.Size = UDim2.new(1, 0, 1, 0) -- size
            TextLabel.Text = "Chest" -- what the label says
            TextLabel.TextColor3 = Color3.new(1, 1, 1) -- color
            TextLabel.TextScaled = true -- if the text is scaled or not
        end
        end

        for i,v in pairs(game.Workspace:GetDescendants()) do -- grabs everything from workspace
            if v.ClassName == 'TouchTransmitter' and v.Parent.Name == 'Chest1' then -- checks if it has a handle and if its a touchtransmitter
                local BillboardGui = Instance.new('BillboardGui') -- Makes Billboardgui
                local TextLabel = Instance.new('TextLabel') -- makes text label
                
                BillboardGui.Parent = v.Parent -- what the billboardgui goes into
                BillboardGui.AlwaysOnTop = true -- if its on top or not
                BillboardGui.Size = UDim2.new(0, 50, 0, 50) -- size of it
                BillboardGui.StudsOffset = Vector3.new(0,2,0)
                
                TextLabel.Parent = BillboardGui -- putting textlabel into billboardgui
                TextLabel.BackgroundColor3 = Color3.new(1,1,1) -- color
                TextLabel.BackgroundTransparency = 1 -- transparency
                TextLabel.Size = UDim2.new(1, 0, 1, 0) -- size
                TextLabel.Text = "Chest" -- what the label says
                TextLabel.TextColor3 = Color3.new(1, 1, 1) -- color
                TextLabel.TextScaled = true -- if the text is scaled or not
            end
            end

            for i,v in pairs(game.Workspace:GetDescendants()) do -- grabs everything from workspace
                if v.ClassName == 'TouchTransmitter' and v.Parent.Name == 'Chest' then -- checks if it has a handle and if its a touchtransmitter
                    local BillboardGui = Instance.new('BillboardGui') -- Makes Billboardgui
                    local TextLabel = Instance.new('TextLabel') -- makes text label
                    
                    BillboardGui.Parent = v.Parent -- what the billboardgui goes into
                    BillboardGui.AlwaysOnTop = true -- if its on top or not
                    BillboardGui.Size = UDim2.new(0, 50, 0, 50) -- size of it
                    BillboardGui.StudsOffset = Vector3.new(0,2,0)
                    
                    TextLabel.Parent = BillboardGui -- putting textlabel into billboardgui
                    TextLabel.BackgroundColor3 = Color3.new(1,1,1) -- color
                    TextLabel.BackgroundTransparency = 1 -- transparency
                    TextLabel.Size = UDim2.new(1, 0, 1, 0) -- size
                    TextLabel.Text = "Chest" -- what the label says
                    TextLabel.TextColor3 = Color3.new(1, 1, 1) -- color
                    TextLabel.TextScaled = true -- if the text is scaled or not
                end
                end
end)

b:addButton("Auto Farm", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/K94jKS3P"))()
end)
b:addButton("Auto Farm boss", function()
    loadstring(game:HttpGet("https://pastebin.com/raw/QLsZKfqn"))()
end)




m:addButton("Sky", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-5033.35, -3.35785, -2469.32)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Jungle", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-1508.65, 37.7, -5.38274)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Colesseum", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-1543.26, 1.69704, -3017.28)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Desert", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(998.465, -3.77234, 4099.51)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Pirate", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-989.125, 19.1, 3813.62)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Prison", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(4876.03, 37.5, 745.872)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Skyarea1", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-4709.01, 840.56, -1878.43)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Skyarea2", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-7874.09, 5541.66, -370.307)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("MobBoss", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-2819.3, -3.90733, 5314.46)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Windmill", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(773.952, 0.654241, 1436.32)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Town", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-543.766, -2.49999, 1271.32)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Fountain", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(6234.04, 3.7911, 4117.49)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Fishmen", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(61599, 13.8965, 1502.88)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("MarineBase", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-4928.82, 27, 4390.05)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("Magma", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-5758.75, 0.299561, 8378.3)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)
m:addButton("MarineStart", function()
    local pl = game.Players.LocalPlayer.Character.HumanoidRootPart
    local location = CFrame.new(-2745.46, 10.6368, 2321.95)
    local humanoid = game.Players.LocalPlayer.Character.Humanoid
    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
    wait(0.1)
    pl.CFrame = location
end)







section1:addSlider("Walkspeed", 0, 16, 1000, function(t)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = t
end)
section1:addSlider("Jumppower", 0, 50, 1000, function(t)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = t
end)

section1:addButton("Click Tp", function()
    local LocalPlayer = game.Players.LocalPlayer
    local rp = LocalPlayer.Character.HumanoidRootPart
    local tool = Instance.new("Tool",LocalPlayer.Backpack)
    local mouse = LocalPlayer:GetMouse()
    tool.Name = "click tp"
    tool.RequiresHandle = false
    tool.Activated:Connect(function()
        rp.CFrame = CFrame.new(mouse.Hit.X,mouse.Hit.Y + 4,mouse.Hit.Z)
    end)
end)

section1:addButton("inf jump", function()
    local Player = game:GetService'Players'.LocalPlayer;
    local UIS = game:GetService'UserInputService';
     
    _G.JumpHeight = 50;
     
    function Action(Object, Function) if Object ~= nil then Function(Object); end end
     
    UIS.InputBegan:connect(function(UserInput)
        if UserInput.UserInputType == Enum.UserInputType.Keyboard and UserInput.KeyCode == Enum.KeyCode.Space then
            Action(Player.Character.Humanoid, function(self)
                if self:GetState() == Enum.HumanoidStateType.Jumping or self:GetState() == Enum.HumanoidStateType.Freefall then
                    Action(self.Parent.HumanoidRootPart, function(self)
                        self.Velocity = Vector3.new(0, _G.JumpHeight, 0);
                    end)
                end
            end)
        end
    end)
end)

g:addButton("Scripts By teres", function()
    
end)
g:addButton("Copy Discord", function()
    setclipboard("https://discord.gg/RH36taPcRJ")
    venyx:Notify("Wry Hub", "Copied to keyboard")
end)


-- second page
local config = venyx:addPage("Configuration", 5012544693)
local a = config:addSection("Config")
local bro = config:addSection("theme")



a:addKeybind("Invisible Gui Keybind", Enum.KeyCode.RightControl, function()
    venyx:toggle()
    end, function()
    end)

    for theme, color in pairs(themes) do -- all in one theme changer, i know, im cool
        bro:addColorPicker(theme, color, function(color3)
        venyx:setTheme(theme, color3)
        end)
        end

-- load
venyx:SelectPage(venyx.pages[1], true)
